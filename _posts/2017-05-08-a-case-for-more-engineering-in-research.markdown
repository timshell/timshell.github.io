---
layout: post
title: A Case for (More) Engineering in Research
description: 
category: articles
blog: true
date: 2017-05-08
tags: 
---

For the past few years, I've been heavily immersed in the academic mindset. I look favorably upon novel research and theory, and I condemn uses of time on what I consider to be not as useful (e.g. excessive programming).

As I mature, I'm coming to realize this view of mine is naive at best and flat out wrong at worst. While I still believe novel research is very important, that should not diminish the importance of the engineering and tedious work required to make such progress. Rather, engineering is not only a necessary condition for research, but also a massive catalyst.

Many people in math and computer science swear by LaTeX, a typesetting engine that is able math look visually appealing and readable. (If you are not sure what LaTeX is, you will almost surely recognize a document created by it). LaTeX was created by Donald Knuth, one of the greatest theoretical computer scientists of his time. He took on the project because of the awful looking nature of typesetting engines during his time. From start to initial release, LaTeX took over ten years to complete. This is ten years when one of the preeminent theoretical computer scientists of his time could not work on, well, theoretical computer science. His research was so advanced that Knuth even received a Turing Award, the "Novel Prize for Computing."

So the question is then: was it worth it? To me and many others in technical fields, LaTeX is an essential part of how we communicate. While newcomers find it difficult to master it in the beginning, it becomes second nature after a few weeks/months. LaTeX speeds up the process of writing technical results as well as increases the effectiveness of communication. It becomes much easier to share results and there are little to no ambiguities caused by the typesetting. Rather, we can now just focus on the math. In this regard, I think it's clear that LaTeX has helped the field of mathematics and computer science as a whole. I can't comment on whether the gains outweigh the ten year loss in Donald Knuth's research output. Perhaps we wished a "lesser" distinguished academic took on this project. But, I think we are all grateful for the time he spent in engineering this.

Stanford Professor Li Fei-Fei is the indirect cause of much of the rise in machine learning, especially deep learning: she and her team created ImageNet, a curated dataset of labeled pictures[^1]. While teams originally had to create their own datasets (which were probably smaller and of less quality), Professor Fei-Fei undertook this project to enable public access to high-quality data. Creation of such a dataset is not necessarily research in itself, but rather a tedious effort that research can build off of. As a result, teams can now easily test out the efficacy of their new algorithms and not spend as much time on the dataset. Today, Professor Fei-Fei is one of the leading figures in the field of artificial intelligence. The question becomes whether this was because of, or despite, the fact that she spent so much time on ImageNet. While it's unclear how much it benefited her and her research team, the effect on the machine learning community was huge. A similar argument can be made for NYU's Yann LeCun and his creation of the MNIST database.

The summer after my freshman year, I worked at the University of Pennsylvania under two neuroscience professors. One of them is famous in his subfield for developing the Psychophysics Toolbox, a MATLAB library that facilitates psychophysics experiments. His initial paper, roughly published twenty years ago, has garnered around 9000 citations as of this post. This means that around 9000 *successful* experiments have been conducted using his toolbox. The benefit his toolbox has brought to the psychophysics research community is clearly huge[^2]. Thus, while his single biggest contribution to his research community may be his engineering effort, it has clearly facilitated a large amount of research and thus catalyzed the progress in the field. If he didn't lead this project, it's not clear whether anyone else would have which would mean the field as a whole would not be where it is today.

Above, I've detailed some examples of how certain academics spent a large amount of time advancing an engineering project rather than their traditional research projects (though there is occasional overlap). It's unclear whether their efforts helped their careers. In fact, one could argue it probably reduced their research output, which is the defining standard for academics. But, it is clear that their work greatly benefited their research communities as a whole. These projects are almost altruistic in a way.

For research projects to be as efficient and effective as they need to be, somebody must put in the engineering effort. While programming may be looked down upon by some researchers, it probably takes up a significant (if not the majority) time of of the work behind each new publication. 

The question then arises whether incentives in academia are right: where publications trump engineering, but engineering enables more publications in general. It's a Nash Equilibrium in a sense. Between the options of focusing on research or research-related engineering, focusing on research is the dominating strategy. If you focus on research while another researcher focuses on research, there is no difference. But if Researcher A focuses on engineering, Researcher B will be have more publications if they focus on research. At best, if the engineering effort is publicly available, Researcher B can expedite the number of publications they produce using that engineering. At worst, if the engineering effort is not publicly available, Researcher B will produce more since Researcher A is spending so much time on the engineering effort. Additionally, Researcher A's lab may not be large enough such that the increase in productivity that their engineering enables results in enough papers to make up that lost time. While it's a little disheartening to view research as a competitive endeavor rather than collaborative, such is often the case in academia. 

Is there any way incentives can be changed that the research community puts in effort to engineering as well as research? Google Research, DeepMind and Facebook are definitely on this route, but we haven't seen it much in traditional academia yet. Is there a way for a researcher to do both effectively? Or, do we need large labs (in industry) where individuals needs to specialize?

There are definitely some caveats I should be clear about. First, it may seem that I have framed research and engineering as separate. This is not really the case. Engineering is a necessary part of research. But, from what I can tell, some individuals focus much on the engineering part while others focus on gaining new insights that warrant published papers (often relying on the efforts by those focusing on the engineering). Secondly, I'm an undergraduate that has not been immersed in research labs. As a result, this is what I see as an outsider looking in. Maybe academics would disagree with me on the state of engineering in research as well as the incentives in the community.

In an ideal world, we want to advance the state of research as quickly and effectively as possible. Engineering that allows efficiency and reproducibility is a big enabler for this.  This is not a new problem. Research is dependent on infrastructure, and better infrastructure leads to better research. Is there any way we can better incorporate infrastructural advancements into our current research ecosystem?

[^1]: This is not to undermine all the direct progress she has made on the field. Her research lab is one of the best in the world.

[^2]: One other way, albeit crude, to measure the effect would be to count the number of citations of all the papers that cited this toolbox.

